# Copyright 2024 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName = sa-liabilities-sandpit-stubs

# Default http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientV2Module"

# Play Modules
play.modules.enabled += "uk.gov.hmrc.saliabilitiessandpitstubs.config.Module"


# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
  uk.gov.hmrc.saliabilitiessandpitstubs.controllers.BalanceController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }
}

# Microservice specific config

feature-toggles {
  new-auth-check-enabled = false
}

generator {
    random {
      seed = 42
    }
    network {
       strategy = "discrete"

       failureProbability {
        failure = 0
        randomDelay = 0
        throttling = 0
        timeout = 0
        standardDeviation = 0
        mean = 0
       }
    }
    time = "fake"
    date = "1993-11-13"
    default = "fake"
    request {
        header = "X-USE-STRATEGY-GENERATION"
    }
}


validation {
    balance {
        enable = true
        fields = ["pendingDueAmount", "overdueAmount", "payableAmount"]
    }
}

microservice {
  services {
    auth {
      host = localhost
      port = 8500
    }
  }
}

